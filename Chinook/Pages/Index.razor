@page "/"
@attribute [Authorize]

@using Chinook.Models
@using Chinook.Services;
@using Microsoft.EntityFrameworkCore

@inject IndexPageService _indexPageService;

<PageTitle>Index</PageTitle>

<h1>Artists</h1>

@if (Artists == null)
{
    <Loading />
}
else
{
    <input type="text" id="NewPlaylist" class="form-control" placeholder="Enter artist name to search" @onchange="onChange">
    <table class="table table-striped table-hover table-sm">
        <thead>
            <tr>
                <th>Name</th>
                <th>Number of albums</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var artist in Artists)
            {
                <tr>
                    <td><a href="Artist/@artist.ArtistId">@artist.Name</a></td>
                    <td>@artist.Albums.Count()</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Artist>? Artists;
    private string artistName;
    protected override async Task OnInitializedAsync() {
        await InvokeAsync(StateHasChanged);
        Artists = await _indexPageService.GetArtists();
    }
    private async void onChange(ChangeEventArgs e)
    {
        if(!string.IsNullOrEmpty(e.Value.ToString()))
        {
            Artists = Artists.Where(a => a.Name.ToUpper().Contains(e.Value.ToString().ToUpper())).ToList();
        }
        else
        {
            Artists = await _indexPageService.GetArtists();
        }
    }
}
